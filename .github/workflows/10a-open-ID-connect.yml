name: Deployment
on:
  # workflow_dispatch:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # custom action, GHA automatically looks for action.yaml file in the specified dir (relative to root)
      - name: Load and cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        # switch off caching, just for demo
        with:
          caching-on: 'false'
      # use the output from custom action
      - name: Show info
        run: echo "Cache used? ${{ steps.cache-deps.outputs.cache-used }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    # set permissions required by OIDC, as the default id-token permission is 'none',
    # and we need 'write' to generate the token,
    # and also add 'contents: read' to allow fetching code, as default access is
    # suppressed by setting the id-token permission here
    permissions:
      id-token: write
      contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      # use OIDC to access S3
      - name: Get AWS permissions
        uses: aws-actions/configure-aws-credentials
        with:
          # ARN from the role provisioned in AWS IAM
          role-to-assume: arn:aws:iam::000549978797:role/GHA-course-upload-to-S3
          aws-region: ap-southeast-2
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-docker
        with:
          bucket: d2569578-6273-4217-8436-c80b741ac8d9
          bucket-region: ap-southeast-2
          dist-folder: ./dist
      - name: Output information
        run: echo "Live URL ${{ steps.deploy.outputs.website-url }} "