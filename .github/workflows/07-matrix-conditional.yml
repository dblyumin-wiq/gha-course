name: Matrix Conditional
on:
  push:
    paths:
      - 'dummy/**'
      - '.github/workflows/07-matrix-conditional.yml'

jobs:
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      pde_envs: ${{ steps.set-matrix.outputs.pde_envs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          since_last_remote_commit: true
      
      - name: List modified files
        env:
          ALL_MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
        run: |
          for file in ${ALL_MODIFIED_FILES}; do
            echo "File modified: $file"
          done

      - name: Set matrix array
        id: set-matrix
        env:
          ALL_MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
        run: |
          files=()
          for file in ${ALL_MODIFIED_FILES}; do
            file_name=$(echo "${file}" | sed 's:.*/::g' | sed 's:\.[^.]*$::g')
            files+=("${file_name}")
          done
          files_json=$(printf '%s\n' "${files[@]}" | jq -R . | jq -s )
          echo $files_json
          echo 'pde_envs=$files_json' >> "$GITHUB_OUTPUT"



  deploy-to-env:
    runs-on: ubuntu-latest
    needs: define-matrix
    continue-on-error: true
    strategy:
      matrix:
        pde_env: ${{ fromJson(needs.define-matrix.outputs.pde_envs) }}
        # env: [
        #   dev: {PDE_ENV: dev, DATA_FILE: '${{ github.workspace }}/dummy/foo_dev.txt'},
        #   test: {PDE_ENV: test, DATA_FILE: '${{ github.workspace }}/dummy/foo_test.txt'},
        # ]
    
    env:
      params: |
        {
          "foo_dev": "dev",
          "foo_test": "test",
        }

    steps:

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Echo env
        run: |
          echo "PDE_ENV=${{ matrix.pde_env }}"
          echo "ENV is: ${{ env.params.foo_dev}}"
