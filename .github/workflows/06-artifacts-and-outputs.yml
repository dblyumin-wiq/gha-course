name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          # this dir is created by the next step, store it for reuse
          path: ~/.npm
          # invalidate the cache if the contents of the requirements lock file change
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # declare k:v for output values
    outputs:
      script-file: ${{ steps.publish.outputs.js-file}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # cache from the previous job will be used, it is stored on GitHub
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      # example on how to store a value in an output var
      - name: Publish JS file name
        id: publish
        # results of echo command are stored in GitHub-provisioned env var
        run: find dist/assets/*.js -type f -execdir echo 'js-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # paths of local items to upload
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: List artifact contents
        run: ls
      # access output var from another job, declared in 'needs' clause
      - name: List output var
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
